buildscript {
    ext {
        springBootVersion = '1.5.12.RELEASE'
        artifactRepoBase = "http://oss.jfrog.org/artifactory"
        baseVersion = "1.0.1"
        baseLibVersion = "3.0.0-SNAPSHOT"
        baseAuthVersion = "3.0.0-SNAPSHOT"
        configurationVersion = "3.0.0-SNAPSHOT"
        aegisClientSupportVersion = "2.0.0-SNAPSHOT"
        jacksonVersion = "2.11.2"
        kotlinVersion = '1.3.11'
        micrometerVersion = '1.1.3'
        platformLogVersion = "1.2.0"
        serviceProjects = [ "coffeeshop-api" ]
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.maven.apache.org/maven2" }

    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'de.undercouch:gradle-download-task:3.4.3'
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }

    ext["elasticsearch.version"] = '5.6.8'
    ext["kafka.version"] = '0.9.0.0'
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'groovy'
    apply plugin: 'java-library'

    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = 'com.customproject.coffeeshop'

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }
}

subprojects {
    processResources {
        String commitVersion = System.getProperty("commitVersion")
        if(commitVersion == null){
            commitVersion = ""
        }
        filesMatching(["**/*.yml", "**/*.xml"]) {
            expand version: project.version,
                    group: project.group,
                    name: project.name,
                    serviceCode: project.name.toUpperCase(),
                    appBuiltTime: new Date().getTime(),
                    commitVersion: commitVersion
        }
    }

    dependencies {
        compile group: 'org.projectlombok', name: 'lombok', version: '1.18.4'

        compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonVersion}"
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonVersion}"
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
        compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: "${jacksonVersion}"


        // spring
        compile "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

        compile(group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.+')
        compile(group: 'io.github.microutils', name: 'kotlin-logging', version: '1.6.10')
        compile group: 'io.micrometer', name: 'micrometer-core', version: "${micrometerVersion}"
        compile group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.1.3'

        // test
        testCompile(group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.5.0')
    }

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    task copyJars(type: Copy) {
        from "${buildDir}/libs"
        into "${buildDir}/deploy/module/${project.name}"
    }

    task printName {
        doLast {
            println "${project.name}"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1'
}
